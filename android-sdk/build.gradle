apply plugin: 'com.android.library'

ext {
    // sdkOrg = 'blueshift-labs'
    sdkOrg = 'nipun'
    sdkGroup = 'com.blueshift'
    sdkArtifactName = 'android-sdk'

    sdkVersion = '3.1.7-alpha'
    sdkVersionDesc = 'Blueshift Android SDK v' + sdkVersion
    sdkVcsTag = sdkVersion

    sdkName = 'Blueshift Android SDK'
    sdkDesc = 'Blueshift Android SDK to make it easier for marketers to integrate their mobile app with Blueshiftâ€™s near real-time event processing platform and send personalized rich push notifications to their customers.'
    sdkSite = 'https://github.com/blueshift-labs/Blueshift-Android-SDK'
    sdkVcsUrl = 'https://github.com/blueshift-labs/Blueshift-Android-SDK.git'

    sdkDevId = 'rahulrvp'
    sdkDevName = 'Rahul Raveendran V P'
    sdkDevEmail = 'rahul.raveendran@blueshift.com'
}

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'SDK_VERSION', "\"$sdkVersion\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:28.0.0'

    // for JSON parsing
    implementation 'com.google.code.gson:gson:2.8.6'

    // for FCM (using the last versions that supports com.android.support libs)
    //noinspection GradleDependency
    implementation 'com.google.firebase:firebase-core:16.0.6'
    //noinspection GradleDependency
    implementation 'com.google.firebase:firebase-messaging:17.3.4'

    testImplementation 'junit:junit:4.13'
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}
// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')

    publications = ['release']

    pkg {
        repo = 'maven'
        name = sdkArtifactName
        userOrg = sdkOrg
        licenses = ['MIT']
        vcsUrl = sdkVcsUrl
        websiteUrl = sdkSite
        desc = sdkDesc
        publish = true
        publicDownloadNumbers = true

        version {
            name = sdkVersion
            desc = sdkVersionDesc
            released = new Date()
            vcsTag = sdkVcsTag

            gpg {
                sign = true
                passphrase = System.getenv('BINTRAY_GPG')
            }
        }
    }
}

afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                artifact sourcesJar
                artifact javadocJar

                // You can then customize attributes of the publication as shown below.
                groupId = sdkGroup
                artifactId = sdkArtifactName
                version = sdkVersion

                pom {
                    developers {
                        developer {
                            id = sdkDevId
                            name = sdkDevName
                            email = sdkDevEmail
                        }
                    }
                }
            }
        }
    }
}
